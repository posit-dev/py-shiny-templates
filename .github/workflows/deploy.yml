name: Deploy to shinyapps.io

on:
  push:
    branches:
      - main

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Generate matrix from deployments.json
        id: set-matrix
        run: |
          MATRIX_JSON=$(jq -c . < deployments.json)
          echo "::set-output name=matrix::$MATRIX_JSON"

  deploy:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9.13"
      - name: Cache deployment
        id: cache-deployment
        uses: actions/cache@v2
        with:
          path: ${{ matrix.folder }}
          key: ${{ runner.os }}-deploy-${{ hashFiles(matrix.folder) }}-${{ hashFiles('requirements.txt') }}
      - name: Install rsconnect-python
        if: steps.cache-deployment.outputs.cache-hit != 'true'
        run: pip install rsconnect-python
      - name: Configure rsconnect-python
        env:
          TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        if: steps.cache-deployment.outputs.cache-hit != 'true'
        run: rsconnect add --account gallery --name gallery --token $TOKEN --secret $SECRET
      - name: Deploy app to shinyapps
        if: steps.cache-deployment.outputs.cache-hit != 'true'
        run: |
          for i in {1..3}; do
            rsconnect deploy shiny ${{ matrix.folder }} \
              --name gallery \
              --entrypoint app-core.py \
              -a ${{ matrix.guid }} && break || sleep 15
          done
