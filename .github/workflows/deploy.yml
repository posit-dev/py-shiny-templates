name: Deploy to shinyapps.io

on:
  push:
    branches:
      - main
      - deploy**

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Generate matrix from deployments.json
        id: set-matrix
        run: |
          MATRIX_JSON=$(jq -c . < deployments.json)
          echo "::set-output name=matrix::$MATRIX_JSON"

  deploy:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      #- name: Cache deployment
      #  id: cache-deployment
      #  uses: actions/cache@v2
      #  with:
      #    path: ${{ matrix.folder }}
      #    key: ${{ runner.os }}-deploy-${{ hashFiles(matrix.folder) }}
      - name: Install rsconnect-python
        run: pip install rsconnect-python
      - name: Configure rsconnect-python
        env:
          TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: rsconnect add --account gallery --name gallery --token $TOKEN --secret $SECRET
      - name: Deploy app to shinyapps
        run: |
          if [ -d "${{ matrix.folder }}" ]; then
            for i in {1..3}; do
              echo "Deployment attempt $i for ${{ matrix.folder }}"
              rsconnect deploy shiny "${{ matrix.folder }}" \
                --account gallery \
                --token $TOKEN \
                --secret $SECRET \
                --entrypoint app-core.py \
                --title "${{ matrix.folder }}" \
                --new && { echo "Deployment successful on attempt $i"; break; } || {
                  echo "Deployment failed on attempt $i"
                  if [ "$i" -eq 3 ]; then
                    echo "All deployment attempts failed"
                    exit 1
                  fi
                  sleep 15
                }
            done
          else
            echo "Directory ${{ matrix.folder }} does not exist, skipping deployment"
          fi
